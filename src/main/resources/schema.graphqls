schema {
    query: Query,
    mutation: Mutation,
}

type Query{
    # Fetch All Users
    #findAllUsers:[User],
    #findUserByName(name:String): User
    getPost(postId: Int): Post
    getPosts(page: Int!, pageSize: Int!): [Post]
    getComments: [Comment]
}

type Mutation {
     #Update the user address
    createUser(name:String!,email:String!): User
    createPost(tile: String!, text: String, userId: Int!, blogId: Int!): Post
    createComment(text: String, user: UserInput, post: PostInput): Comment
    uploadFile(files: [Upload!]!, postId: Int!): Boolean
}


type Post {
    id: ID!
    title: String,
    text: String,
    user: User,
    comments: [Comment],
    blog: Blog,
    files: [File]
}

type File {
    filename: String,
    content: String,
}

type Blog {
    id: ID!,
    name: String,
}

type Comment {
    id: ID!,
    text: String,
    user: User,
    post: Post
}

type User {
    id : ID!,
    name :String,
    email :String,
    posts: [Post]
}

input UserInput {
    id: Int,
}

input BlogInput {
    id: Int,
}

input PostInput {
    id: Int
}

input CommentInput {
    text: String
}

scalar Upload
